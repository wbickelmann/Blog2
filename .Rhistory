sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.k<-sahdd
sahdd.k$chd<-sahdd.k$chd +1
x<-sahdd.k[-10]
y<-sahdd.k$chd
table(y)
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 19, regression = FALSE, Levels = unique(y), method = 'euclidean',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
Classinto
confusionMatrix(Classinto,y)
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 19, regression = FALSE, Levels = unique(y), method = 'euclidean',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 19, regression = FALSE, Levels = unique(y), method = 'minkowski',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 19, regression = FALSE, Levels = unique(y), method = 'mahalanobis',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
sahdd <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/sahdd.csv', as.is = T);
sahdd<-sahdd[-1]
sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.kn <- as.data.frame(lapply(sahdd[1:9], normalize))
sahdd.kn$chd<-sahdd$chd +1
x<-sahdd.kn[-10]
y<-sahdd.kn$chd
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 19, regression = FALSE, Levels = unique(y), method = 'euclidean',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
knitr::opts_chunk$set(echo = TRUE)
logit<-glm(as.factor(chd) ~ tobacco + adiposity + famhist + typea + obesity + age + ldl,  family = binomial(), data = sahdd)
summary(logit)
logit2<-fitted(logit)
logit.class<-cut(logit2,  breaks=c(-Inf, .5, Inf),labels=c(0,1))
confusionMatrix(logit.class,sahdd$chd)
logit<-glm(as.factor(chd) ~ tobacco + famhist + typea + obesity + age + ldl,  family = binomial(), data = sahdd)
summary(logit)
logit2<-fitted(logit)
logit.class<-cut(logit2,  breaks=c(-Inf, .5, Inf),labels=c(0,1))
confusionMatrix(logit.class,sahdd$chd)
logit<-glm(as.factor(chd) ~ tobacco + famhist + typea + age + ldl,  family = binomial(), data = sahdd)
summary(logit)
logit2<-fitted(logit)
logit.class<-cut(logit2,  breaks=c(-Inf, .5, Inf),labels=c(0,1))
confusionMatrix(logit.class,sahdd$chd)
ldfa<-lda(chd ~ sbp + tobacco + adiposity + famhist + typea + obesity + alcohol + age + ldl, data = sahdd,CV = T, priors = c(1,1))
library(caret)
library(MASS)
ldfa<-lda(chd ~ sbp + tobacco + adiposity + famhist + typea + obesity + alcohol + age + ldl, data = sahdd,CV = T, priors = c(1,1))
summary(ldfa)
ldfa$scaling
confusionMatrix(ldfa$class, sahdd$chd)
logit<-glm(as.factor(chd) ~ famhist + tobacco + age ,data = sahdd, family = binomial())
summary(logit)
logit2<-fitted(logit)
logit.class<-cut(logit2,  breaks=c(-Inf, .5, Inf),labels=c(0,1))
confusionMatrix(logit.class,sahdd$chd)
sahdd<-sahdd[-1]
sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.n <- as.data.frame(lapply(sahdd[1:10], normalize))
sahdd <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/sahdd.csv', as.is = T);
sahdd<-sahdd[-1]
sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.n <- as.data.frame(lapply(sahdd[1:10], normalize))
sahdd_train.kn<-sahdd.n[-10]
sahdd_train_labels.kn<-sahdd$chd
sahdd_test_pred <-knn.cv(sahdd_train.kn, sahdd_train_labels.kn, k = 1, prob = TRUE)
confusionMatrix(sahdd_test_pred,sahdd_train_labels.kn)
sahdd_test_pred <-knn.cv(sahdd_train.kn, sahdd_train_labels.kn, k = 1, prob = TRUE)
confusionMatrix(sahdd_test_pred,sahdd_train_labels.kn)
sahdd_test_pred <-knn.cv(sahdd_train.kn, sahdd_train_labels.kn, k = 5, prob = TRUE)
confusionMatrix(sahdd_test_pred,sahdd_train_labels.kn)
sahdd_test_pred <- knn.cv(sahdd_train.kn, sahdd_train_labels.kn, k = 11, prob = TRUE)
confusionMatrix(sahdd_test_pred,sahdd_train_labels.kn)
sahdd_test_pred <- knn.cv(sahdd_train.kn, sahdd_train_labels.kn, k = 19, prob = TRUE)
confusionMatrix(sahdd_test_pred,sahdd_train_labels.kn)
sahdd <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/sahdd.csv', as.is = T);
sahdd<-sahdd[-1]
sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.k<-sahdd
sahdd.k$chd<-sahdd.k$chd +1
x<-sahdd.k[-10]
y<-sahdd.k$chd
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 19, regression = FALSE, Levels = unique(y), method = 'euclidean',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 19, regression = FALSE, Levels = unique(y), method = 'minkowski',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 19, regression = FALSE, Levels = unique(y), method = 'mahalanobis',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
sahdd <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/sahdd.csv', as.is = T);
sahdd<-sahdd[-1]
sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.kn <- as.data.frame(lapply(sahdd[1:9], normalize))
sahdd.kn$chd<-sahdd$chd +1
x<-sahdd.kn[-10]
y<-sahdd.kn$chd
sahdd <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/sahdd.csv', as.is = T);
sahdd<-sahdd[-1]
sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.kn <- as.data.frame(lapply(sahdd[1:9], normalize))
sahdd.kn$chd<-sahdd$chd +1
x<-sahdd.kn[-10]
y<-sahdd.kn$chd
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 19, regression = FALSE, Levels = unique(y), method = 'euclidean',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 19, regression = FALSE, Levels = unique(y), method = 'minkowski',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 19, regression = FALSE, Levels = unique(y), method = 'mahalanobis',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
sahdd_test_pred
sahdd_test_pred
knitr::opts_chunk$set(echo = TRUE)
sahdd <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/sahdd.csv', as.is = T);
install.packages("KernelKnn")
install.packages("ks")
install.packages("class")
library(class)
library(KernelKnn)
library(ks)
library(caret)
install.packages("KernelKnn")
install.packages("ks")
install.packages("class")
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x))) }
install.packages("class")
sahdd<-sahdd[-1]
sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.n <- as.data.frame(lapply(sahdd[1:10], normalize))
sahdd_train.kn<-sahdd.n[-10]
sahdd_train_labels.kn<-sahdd$chd
sahdd_test_pred <-knn.cv(sahdd_train.kn, sahdd_train_labels.kn, k = 1, prob = TRUE)
confusionMatrix(sahdd_test_pred,sahdd_train_labels.kn)
sahdd<-sahdd[-1]
sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.n <- as.data.frame(lapply(sahdd[1:10], normalize))
sahdd <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/sahdd.csv', as.is = T);
sahdd<-sahdd[-1]
sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.n <- as.data.frame(lapply(sahdd[1:10], normalize))
sahdd_train.kn<-sahdd.n[-10]
sahdd_train_labels.kn<-sahdd$chd
sahdd_test_pred <-knn.cv(sahdd_train.kn, sahdd_train_labels.kn, k = 5, prob = TRUE)
confusionMatrix(sahdd_test_pred,sahdd_train_labels.kn)
sahdd_test_pred <- knn.cv(sahdd_train.kn, sahdd_train_labels.kn, k = 11, prob = TRUE)
confusionMatrix(sahdd_test_pred,sahdd_train_labels.kn)
sahdd_test_pred <- knn.cv(sahdd_train.kn, sahdd_train_labels.kn, k = 19, prob = TRUE)
confusionMatrix(sahdd_test_pred,sahdd_train_labels.kn)
sahdd <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/sahdd.csv', as.is = T);
sahdd<-sahdd[-1]
sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.k<-sahdd
sahdd.k$chd<-sahdd.k$chd +1
x<-sahdd.k[-10]
y<-sahdd.k$chd
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 5, regression = FALSE, Levels = unique(y), method = 'euclidean',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
sahdd <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/sahdd.csv', as.is = T);
sahdd<-sahdd[-1]
sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.k<-sahdd
sahdd.k$chd<-sahdd.k$chd +1
x<-sahdd.k[-10]
y<-sahdd.k$chd
sahdd <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/sahdd.csv', as.is = T);
sahdd<-sahdd[-1]
sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.kn <- as.data.frame(lapply(sahdd[1:9], normalize))
sahdd.kn$chd<-sahdd$chd +1
x<-sahdd.kn[-10]
y<-sahdd.kn$chd
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 19, regression = FALSE, Levels = unique(y), method = 'euclidean',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
sahdd <- read.csv('http://math.mercyhurst.edu/~sousley/STAT_139/data/sahdd.csv', as.is = T);
sahdd<-sahdd[-1]
sahdd$famhist<-as.numeric(sahdd$famhist == "Present")
sahdd.kn <- as.data.frame(lapply(sahdd[1:9], normalize))
sahdd.kn$chd<-sahdd$chd +1
x<-sahdd.kn[-10]
y<-sahdd.kn$chd
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 5, regression = FALSE, Levels = unique(y), method = 'euclidean',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 5, regression = FALSE, Levels = unique(y), method = 'minkowski',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
outKNN <- KernelKnn(x, TEST_data = NULL, as.numeric(y), k = 5, regression = FALSE, Levels = unique(y), method = 'mahalanobis',weights_function = 'exponential')
Classinto <- c(0,0,0)
for (i in seq(length(y)))
{ Classinto[i] <- match(1,match(outKNN[i,], max(outKNN[i,])))
}
confusionMatrix(Classinto,y)
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x))) }
library(dplyr)
library(ggplot)
library(ggiraph)
Batting%>%
group_by(playerID)%>%
summarize(Career_HR=sum(HR),Career_SO=sum(SO))%>%
filter(Career_HR>=400)->df
HR_vs_SO<-inner_join(df,Master,by=c("playerID"))%>%
select(nameFirst,nameLast,Career_HR,Career_SO)
#----------------------------------------------------------------------------------
g<-ggplot()+
geom_point(data=HR_vs_SO, aes(x=Career_SO,y=Career_HR, tooltip=nameLast)) +
ggtitle("Career Homeruns vs. Strikeouts for Great Hitters") +
xlab("Strikeouts") +
ylab("Homeruns")
ggiraph(code=print(g),hover_css="fill:white;stroke:black")
library(ggplot2)
library(ggiraph)
library(dplyr)
Batting%>%
group_by(playerID)%>%
summarize(Career_HR=sum(HR),Career_SO=sum(SO))%>%
filter(Career_HR>=400)->df
HR_vs_SO<-inner_join(df,Master,by=c("playerID"))%>%
select(nameFirst,nameLast,Career_HR,Career_SO)
#----------------------------------------------------------------------------------
g<-ggplot()+
geom_point(data=HR_vs_SO, aes(x=Career_SO,y=Career_HR, tooltip=nameLast)) +
ggtitle("Career Homeruns vs. Strikeouts for Great Hitters") +
xlab("Strikeouts") +
ylab("Homeruns")
Batting%>%
group_by(playerID)%>%
summarize(Career_HR=sum(HR),Career_SO=sum(SO))%>%
filter(Career_HR>=400)->df
library(Lahman)
HR_vs_SO<-inner_join(df,Master,by=c("playerID"))%>%
select(nameFirst,nameLast,Career_HR,Career_SO)
Batting%>%
group_by(playerID)%>%
summarize(Career_HR=sum(HR),Career_SO=sum(SO))%>%
filter(Career_HR>=400)->df
HR_vs_SO<-inner_join(df,Master,by=c("playerID"))%>%
select(nameFirst,nameLast,Career_HR,Career_SO)
g<-ggplot()+
geom_point(data=HR_vs_SO, aes(x=Career_SO,y=Career_HR, tooltip=nameLast)) +
ggtitle("Career Homeruns vs. Strikeouts for Great Hitters") +
xlab("Strikeouts") +
ylab("Homeruns")
ggiraph(code=print(g),hover_css="fill:white;stroke:black")
plot(density(rnorm(30)))
g<-ggplot()+
geom_point(data=HR_vs_SO, aes(x=Career_SO,y=Career_HR)) +
ggtitle("Career Homeruns vs. Strikeouts for Great Hitters") +
xlab("Strikeouts") +
ylab("Homeruns")
ggiraph(code=print(g),hover_css="fill:white;stroke:black")
my_gg <- g + geom_point_interactive(aes(tooltip = model), size = 2)
ggiraph(code = print(my_gg) )
my_gg <- g + geom_point_interactive(aes(tooltip = model), size = 2)
ggiraph(code = print(my_gg))
g<-ggplot()+
geom_point(data=HR_vs_SO, aes(x=Career_SO,y=Career_HR, tooltip=nameLast)) +
ggtitle("Career Homeruns vs. Strikeouts for Great Hitters") +
xlab("Strikeouts") +
ylab("Homeruns")
ggiraph(code=print(g),hover_css="fill:white;stroke:black")
ggiraph(code=print(g),hover_css="fill:white;stroke:black")
setwd("~/Blog1")
blogdown::serve_site()
setwd("~/Blog1")
setwd("~/Blog2")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
Batting%>%
group_by(playerID)%>%
summarize(Career_HR=sum(HR),Career_SO=sum(SO))%>%
filter(Career_HR>=400)->df
Batting%>%
group_by(playerID)%>%
summarize(Career_HR=sum(HR),Career_SO=sum(SO))%>%
filter(Career_HR>=400)->df
HR_vs_SO<-inner_join(df,Master,by=c("playerID"))%>%
select(nameFirst,nameLast,Career_HR,Career_SO)
g<-ggplot()+
geom_point(data=HR_vs_SO, aes(x=Career_SO,y=Career_HR, tooltip=nameLast)) +
ggtitle("Career Homeruns vs. Strikeouts for Great Hitters") +
xlab("Strikeouts") +
ylab("Homeruns")
g<-ggplot()+
geom_point(data=HR_vs_SO, aes(x=Career_SO,y=Career_HR)) +
ggtitle("Career Homeruns vs. Strikeouts for Great Hitters") +
xlab("Strikeouts") +
ylab("Homeruns")
g<-ggplot()+
geom_point(data=HR_vs_SO, aes(x=Career_SO,y=Career_HR)) +
ggtitle("Career Homeruns vs. Strikeouts for Great Hitters") +
xlab("Strikeouts") +
ylab("Homeruns")
g
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(collapse = TRUE)
ggiraph(code=print(g),hover_css="fill:white;stroke:black")
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
library(ggiraph)
ggplot() + #blank slate
geom_histogram(data = df, aes(x=weight))
df<-Mastre%>%
select(weight)%>%
df<-Mastre%>%
select(weight)%>%
df<-Master%>%
select(weight)%>%
df<-Master%>%
select(weight)%>%
Master
library(Lahman)
df<-Master%>%
select(weight)
ggplot() + #blank slate
geom_histogram(data = df, aes(x=weight))
df%>%
filter(!is.na(weight))
ggplot()+
geom_histogram(data=df,aes(x=weight),col="rainbow")
ggplot()+
geom_histogram(data=df,aes(x=weight),col="black")
ggplot()+
geom_histogram(data=df,aes(x=weight),col="black",fill="green")
ggplot()+
geom_histogram(data=df,aes(x=weight),col="black",fill="green", bins = 25) #now to mess with the bins
ggplot()+
geom_histogram(data=df,aes(x=weight),col="black",fill="green", bins = 50)
ggplot()+
geom_bar(data=df), aes(x=teamID,= HR), stat="identity",color="white",fill="black"
ggplot()+
geom_bar(data=df), aes(x=teamID,= HR), stat="identity",color="white",fill="black")
ggplot()+
geom_bar(data=df), aes(x=teamID,= HR), stat="identity",color="white",fill="black")
ggplot()+
geom_bar(data=df, aes(x=teamID,= HR), stat="identity",color="white",fill="black")
ggplot()+
geom_bar(data=df, aes(x=teamID,y= HR), stat="identity",color="white",fill="black")
df<-Teams%>%
filter(year==1980)%>%
select(teamID,HR)
df<-Teams%>%
filter(yearID==1980)%>%
select(teamID,HR)
ggplot()+
geom_bar(data=df, aes(x=teamID,y= HR), stat="identity",color="white",fill="black")
ggplot()+
geom_bar(data=df, aes(x=teamID,y= HR), stat="identity",color="white",fill="black") +
coord_flip()
ggplot()+
geom_bar(data=df, aes(x=name,y= HR), stat="identity",color="white",fill="black") +
coord_flip()
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)
ggplot()+
geom_bar(data=df, aes(x=name,y= HR), stat="identity",color="white",fill="black")
ggplot()+
geom_bar(data=df, aes(x=name,y= HR), stat="identity",color="white",fill="black") +
coord_flip()
df$name<-factor(df$name,levels=df$name)
df$name<-factor(df$name,levels=df$name)
ggplot()+
geom_bar(data=df, aes(x=name,y= HR), stat="identity",color="white",fill="black") +
coord_flip()
df$name<-factor(df$name,levels=df$name)
ggplot()+
geom_bar(data=df, aes(x=name,y= HR), stat="identity",color="white",fill="black") +
coord_flip()
df<-Team%>%
filter(year==1980)
df<-Team%>%
filter(year==1980)
df<-Teams%>%
filter(year==1980)
df<-Teams%>%
filter(yearID==1980)
select(name,HR)%>%
arrange(HR)
Teams
View(Teams)
df<-Teams%>%
filter(yearID==1980)
select(name,HR)%>%
arrange(HR)
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
geom_bar(data=df, aes(x=name,y= HR), stat="identity",color="white",fill="black") +
coord_flip()
ggplot()+
geom_bar(data=df, aes(x=name,y= HR), stat="identity",color="white",fill="black") +
coord_flip()
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
ggplot()+
geom_bar(data=df, aes(x=name,y= HR), stat="identity",color="white",fill="black") +
coord_flip()
blogdown::serve_site()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(ggiraph)
library(Lahman)
df<-Master%>%
select(weight)
ggplot() + #blank slate
geom_histogram(data = df, aes(x=weight))
df%>%
filter(!is.na(weight))
ggplot()+
geom_histogram(data=df,aes(x=weight),col="black",fill="green") # two argumets were aded; color and fill
ggplot()+
geom_histogram(data=df,aes(x=weight),col="black",fill="green", bins = 25) #now to mess with the bins
ggplot()+
geom_histogram(data=df,aes(x=weight),col="black",fill="green", bins = 50)
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)
ggplot()+
geom_bar(data=df, aes(x=name,y= HR), stat="identity",color="white",fill="black")
ggplot()+
geom_bar(data=df, aes(x=name,y= HR), stat="identity",color="white",fill="black") +
coord_flip()
df$name<-factor(df$name,levels=df$name)
df<-Teams%>%
filter(yearID==1980)%>%
select(name,HR)%>%
arrange(HR)
ggplot()+
geom_bar(data=df, aes(x=name,y= HR), stat="identity",color="white",fill="black") +
coord_flip()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
